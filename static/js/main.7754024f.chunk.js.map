{"version":3,"sources":["Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","today","Date","timerIdToday","this","window","setInterval","setState","console","info","toUTCString","slice","prevProps","name","props","text","debug","clearInterval","className","React","Component","App","hasClock","clockName","timerIdClock","getRandomName","value","now","toString","document","addEventListener","event","preventDefault","ReactDOM","render","getElementById"],"mappings":"sNAWaA,EAAb,4MACEC,MAAyB,CACvBC,MAAO,IAAIC,MAFf,EAKEC,aAAe,EALjB,uDAOE,WAAqB,IAAD,OAClBC,KAAKD,aAAeE,OAAOC,aAAY,WACrC,EAAKC,SAAS,CAAEN,MAAO,IAAIC,OAC3BM,QAAQC,KAAK,EAAKT,MAAMC,MAAMS,cAAcC,OAAO,IAAK,MACvD,OAXP,gCAcE,SAAmBC,GACjB,IAAQC,EAAST,KAAKU,MAAdD,KACFE,EAAI,uBAAmBH,EAAUC,KAA7B,eAAwCA,GAE9CA,IAASD,EAAUC,MACrBL,QAAQQ,MAAMD,KAnBpB,kCAuBE,WACEE,cAAcb,KAAKD,gBAxBvB,oBA2BE,WACE,IAAQF,EAAUG,KAAKJ,MAAfC,MACAY,EAAST,KAAKU,MAAdD,KAER,OACE,sBAAKK,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGL,IAGF,YAED,sBAAMK,UAAU,cAAhB,SACGjB,EAAMS,cAAcC,OAAO,IAAK,YAxC3C,GAA2BQ,IAAMC,WCDpBC,EAAb,4MACErB,MAAyB,CACvBsB,UAAU,EACVC,UAAW,WAHf,EAMEC,aAAe,EANjB,EAsBEC,cAAgB,WACd,IAAMC,EAAQxB,KAAKyB,MAAMC,WAAWjB,OAAO,GAE3C,MAAM,SAAN,OAAgBe,IAzBpB,uDAQE,WAAqB,IAAD,OAClBG,SAASC,iBAAiB,SAAS,WACjC,EAAKvB,SAAS,CAAEe,UAAU,OAG5BO,SAASC,iBAAiB,eAAe,SAACC,GACxCA,EAAMC,iBACN,EAAKzB,SAAS,CAAEe,UAAU,OAE5BlB,KAAKoB,aAAenB,OAAOC,aAAY,WACrC,EAAKC,SAAS,CAAEgB,UAAW,EAAKE,oBAC/B,QAnBP,oBA4BE,WACE,MAAgCrB,KAAKJ,MAA7BsB,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,UAElB,OACE,sBAAKL,UAAU,MAAf,UACE,6CAEEI,GAAY,cAAC,EAAD,CAAOT,KAAMU,WAnCnC,GAAyBJ,IAAMC,WCP/Ba,IAASC,OACP,cAAC,EAAD,IACAL,SAASM,eAAe,W","file":"static/js/main.7754024f.chunk.js","sourcesContent":["/* eslint-disable no-console */\nimport React from 'react';\n\ntype State = {\n  today : Date,\n};\n\ntype Props = {\n  name: string,\n};\n\nexport class Clock extends React.Component<Props, State> {\n  state: Readonly<State> = {\n    today: new Date(),\n  };\n\n  timerIdToday = 0;\n\n  componentDidMount() {\n    this.timerIdToday = window.setInterval(() => {\n      this.setState({ today: new Date() });\n      console.info(this.state.today.toUTCString().slice(-12, -4));\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    const { name } = this.props;\n    const text = `Renamed from ${prevProps.name} to ${name}`;\n\n    if (name !== prevProps.name) {\n      console.debug(text);\n    }\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerIdToday);\n  }\n\n  render() {\n    const { today } = this.state;\n    const { name } = this.props;\n\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {name}\n        </strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          {today.toUTCString().slice(-12, -4)}\n        </span>\n      </div>\n    );\n  }\n}\n","/* eslint-disable no-console */\nimport React from 'react';\nimport './App.scss';\nimport { Clock } from './Clock';\n\ntype State = {\n  hasClock: boolean,\n  clockName: string,\n};\n\nexport class App extends React.Component<{}, State> {\n  state: Readonly<State> = {\n    hasClock: true,\n    clockName: 'Clock-0',\n  };\n\n  timerIdClock = 0;\n\n  componentDidMount() {\n    document.addEventListener('click', () => {\n      this.setState({ hasClock: true });\n    });\n\n    document.addEventListener('contextmenu', (event) => {\n      event.preventDefault();\n      this.setState({ hasClock: false });\n    });\n    this.timerIdClock = window.setInterval(() => {\n      this.setState({ clockName: this.getRandomName() });\n    }, 3300);\n  }\n\n  getRandomName = () => {\n    const value = Date.now().toString().slice(-4);\n\n    return `Clock-${value}`;\n  };\n\n  render() {\n    const { hasClock, clockName } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n\n        { hasClock && <Clock name={clockName} /> }\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}